{"ast":null,"code":"var _jsxFileName = \"/Users/aliafzal/React Apps/realtime-crypto/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://api.coincap.io/v2\";\nconst webUrl = \"wss://ws.coincap.io/prices?assets=bitcoin,ethereum,monero,litecoin\";\n\nfunction App() {\n  _s();\n\n  const ws = useRef(null);\n  ws.current = new WebSocket(webUrl);\n  const [val, setVal] = useState(0);\n  var dd = 0;\n  useEffect(() => {\n    ws.current = new WebSocket(webUrl);\n\n    ws.current.onopen = () => console.log(\"ws opened\");\n\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    ws.current.onmessage = e => {\n      const message = JSON.parse(e.data);\n      console.log(\"e\", message);\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  const crypto = ['Bitcoin', 'Mthereum', 'Monero', 'Litecoin'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: crypto.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item, \" : \", index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lMeO6uCwxOt5/8q2C5LQ3+T3LuE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aliafzal/React Apps/realtime-crypto/src/App.js"],"names":["React","useState","useEffect","useRef","socketIOClient","url","webUrl","App","ws","current","WebSocket","val","setVal","dd","onopen","console","log","onclose","onmessage","e","message","JSON","parse","data","close","crypto","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,MAAMC,GAAG,GAAG,2BAAZ;AACA,MAAMC,MAAM,GAAG,oEAAf;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,EAAE,GAAGL,MAAM,CAAC,IAAD,CAAjB;AAEAK,EAAAA,EAAE,CAACC,OAAH,GAAa,IAAIC,SAAJ,CAAcJ,MAAd,CAAb;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AACA,MAAIY,EAAE,GAAG,CAAT;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,EAAE,CAACC,OAAH,GAAa,IAAIC,SAAJ,CAAcJ,MAAd,CAAb;;AACAE,IAAAA,EAAE,CAACC,OAAH,CAAWK,MAAX,GAAoB,MAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA1B;;AACAR,IAAAA,EAAE,CAACC,OAAH,CAAWQ,OAAX,GAAqB,MAAMF,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA3B;;AACAR,IAAAA,EAAE,CAACC,OAAH,CAAWS,SAAX,GAAwBC,CAAD,IAAO;AAC5B,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,IAAb,CAAhB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBI,OAAjB;AACD,KAHD;;AAIA,WAAO,MAAM;AACTZ,MAAAA,EAAE,CAACC,OAAH,CAAWe,KAAX;AACH,KAFD;AAGH,GAXU,EAWR,EAXQ,CAAT;AAYF,QAAMC,MAAM,GAAG,CAAC,SAAD,EAAW,UAAX,EAAsB,QAAtB,EAA+B,UAA/B,CAAf;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKd;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACCc,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAMC,KAAN,KAAc;AACxB,4BAAO;AAAA,qBAAKD,IAAL,SAAcC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA7BQrB,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst url = \"https://api.coincap.io/v2\";\nconst webUrl = \"wss://ws.coincap.io/prices?assets=bitcoin,ethereum,monero,litecoin\"\nfunction App() {\n  const ws = useRef(null);\n\n  ws.current = new WebSocket(webUrl);\n  const [val, setVal] = useState(0);\n  var dd = 0;\n  useEffect(() => {\n    ws.current = new WebSocket(webUrl);\n    ws.current.onopen = () => console.log(\"ws opened\");\n    ws.current.onclose = () => console.log(\"ws closed\");\n    ws.current.onmessage = (e) => {\n      const message = JSON.parse(e.data);\n      console.log(\"e\", message);\n    }\n    return () => {\n        ws.current.close();\n    };\n}, []);\nconst crypto = ['Bitcoin','Mthereum','Monero','Litecoin'];\n  return (\n    <div className=\"App\">\n      <h1>{val}</h1>\n      <ul>\n      {crypto.map((item,index)=>{\n        return <li>{item} : {index}</li>\n      })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}