{"ast":null,"code":"var _jsxFileName = \"/Users/aliafzal/React Apps/realtime-crypto/src/components/CoinChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Chart from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinChart = ({\n  data\n}) => {\n  _s();\n\n  const chartRef = useRef();\n  const {\n    day,\n    week,\n    year,\n    detail\n  } = data;\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\n\n  const determineTimeFormat = () => {\n    switch (timeFormat) {\n      case \"24h\":\n        return day;\n\n      case \"7d\":\n        return week;\n\n      case \"1y\":\n        return year;\n\n      default:\n        return day;\n    }\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current && detail) {\n      console.log(\"yeah\");\n      const chartInstance = new Chart(chartRef.current, {\n        type: \"line\",\n        data: {\n          datasets: [{\n            label: `${detail.name} price`,\n            data: determineTimeFormat(),\n            backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n            borderColor: \"rgba(174, 305, 194, 0.4\",\n            pointRadius: 0\n          }]\n        },\n        options: { ...historyOptions\n        }\n      });\n    }\n  });\n\n  const renderPrice = () => {\n    if (detail) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-0\",\n          children: [\"$\", detail.current_price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: detail.price_change_24h < 0 ? \"text-danger my-0\" : \"text-success my-0\",\n          children: [detail.price_change_percentage_24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border mt-2 rounded p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderPrice()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"myChart\",\n        width: 250,\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-button mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"24h\"),\n        className: \"btn btn-outline-secondary btn-sm\",\n        children: \"24h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"7d\"),\n        className: \"btn btn-outline-secondary btn-sm mx-1\",\n        children: \"7d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"1y\"),\n        className: \"btn btn-outline-secondary btn-sm\",\n        children: \"1y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinChart, \"QUAhcve7AqTX7QOQ/03kwop9URk=\");\n\n_c = CoinChart;\nexport default CoinChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinChart\");","map":{"version":3,"sources":["/Users/aliafzal/React Apps/realtime-crypto/src/components/CoinChart.jsx"],"names":["React","useRef","useEffect","useState","Chart","CoinChart","data","chartRef","day","week","year","detail","timeFormat","setTimeFormat","determineTimeFormat","current","console","log","chartInstance","type","datasets","label","name","backgroundColor","borderColor","pointRadius","options","historyOptions","renderPrice","current_price","toFixed","price_change_24h","price_change_percentage_24h"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport Chart from 'chart.js';\n\nconst CoinChart = ({ data }) => {\n  const chartRef = useRef();\n  const { day, week, year, detail } = data;\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\n\n  const determineTimeFormat = () => {\n    switch (timeFormat) {\n      case \"24h\":\n        return day;\n      case \"7d\":\n        return week;\n      case \"1y\":\n        return year;\n      default:\n        return day;\n    }\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current && detail) {\n      console.log(\"yeah\");\n      const chartInstance = new Chart(chartRef.current, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              label: `${detail.name} price`,\n              data: determineTimeFormat(),\n              backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n              borderColor: \"rgba(174, 305, 194, 0.4\",\n              pointRadius: 0,\n            },\n          ],\n        },\n        options: {\n          ...historyOptions,\n        },\n      });\n    }\n  });\n\n  const renderPrice = () => {\n    if (detail) {\n      return (\n        <>\n          <p className=\"my-0\">${detail.current_price.toFixed(2)}</p>\n          <p\n            className={\n              detail.price_change_24h < 0\n                ? \"text-danger my-0\"\n                : \"text-success my-0\"\n            }\n          >\n            {detail.price_change_percentage_24h.toFixed(2)}%\n          </p>\n        </>\n      );\n    }\n  };\n  return (\n    <div className=\"bg-white border mt-2 rounded p-3\">\n      <div>{renderPrice()}</div>\n      <div>\n        <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\n      </div>\n\n      <div className=\"chart-button mt-1\">\n        <button\n          onClick={() => setTimeFormat(\"24h\")}\n          className=\"btn btn-outline-secondary btn-sm\"\n        >\n          24h\n        </button>\n        <button\n          onClick={() => setTimeFormat(\"7d\")}\n          className=\"btn btn-outline-secondary btn-sm mx-1\"\n        >\n          7d\n        </button>\n        <button\n          onClick={() => setTimeFormat(\"1y\")}\n          className=\"btn btn-outline-secondary btn-sm\"\n        >\n          1y\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CoinChart;"]},"metadata":{},"sourceType":"module"}