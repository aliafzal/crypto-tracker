{"ast":null,"code":"var _jsxFileName = \"/Users/aliafzal/React Apps/realtime-crypto/src/components/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Link from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const ws = useRef(null);\n  const [price, setPrice] = useState(0);\n  useEffect(() => {\n    ws.current = new WebSocket(props.webUrl + props.crypto);\n\n    ws.current.onopen = () => console.log(\"ws opened\");\n\n    ws.current.onclose = () => console.log(\"ws closed\");\n\n    ws.current.onmessage = e => {\n      const message = JSON.parse(e.data);\n      setPrice(message[props.crypto]);\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: {\n      backgroundColor: \"light-grey\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.image,\n      alt: \"\",\n      width: \"40\",\n      height: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.crypto.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"$ \" + price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"rPfFV9CyQqRuPL9HyosIb2Gpc8A=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/aliafzal/React Apps/realtime-crypto/src/components/Card.jsx"],"names":["React","useState","useEffect","useRef","Link","Card","props","ws","price","setPrice","current","WebSocket","webUrl","crypto","onopen","console","log","onclose","onmessage","e","message","JSON","parse","data","close","backgroundColor","image","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAChB,QAAMC,EAAE,GAAGJ,MAAM,CAAC,IAAD,CAAjB;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,CAAD,CAAjC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,EAAE,CAACG,OAAH,GAAa,IAAIC,SAAJ,CAAcL,KAAK,CAACM,MAAN,GAAeN,KAAK,CAACO,MAAnC,CAAb;;AACAN,IAAAA,EAAE,CAACG,OAAH,CAAWI,MAAX,GAAoB,MAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA1B;;AACAT,IAAAA,EAAE,CAACG,OAAH,CAAWO,OAAX,GAAqB,MAAMF,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA3B;;AACAT,IAAAA,EAAE,CAACG,OAAH,CAAWQ,SAAX,GAAwBC,CAAD,IAAO;AAC5B,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,IAAb,CAAhB;AACAd,MAAAA,QAAQ,CAACW,OAAO,CAACd,KAAK,CAACO,MAAP,CAAR,CAAR;AACD,KAHD;;AAIA,WAAO,MAAM;AACTN,MAAAA,EAAE,CAACG,OAAH,CAAWc,KAAX;AACH,KAFD;AAGH,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAA7B;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEnB,KAAK,CAACoB,KAAhB;AAAuB,MAAA,GAAG,EAAC,EAA3B;AAA8B,MAAA,KAAK,EAAC,IAApC;AAAyC,MAAA,MAAM,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKpB,KAAK,CAACO,MAAN,CAAac,WAAb;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAI,OAAOnB;AAAX;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GArBQH,I;;KAAAA,I;AAuBT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Link from \"react-router-dom\";\nfunction Card(props){\n    const ws = useRef(null);\n    const [price,setPrice] = useState(0);\n    useEffect(() => {\n        ws.current = new WebSocket(props.webUrl + props.crypto);\n        ws.current.onopen = () => console.log(\"ws opened\");\n        ws.current.onclose = () => console.log(\"ws closed\");\n        ws.current.onmessage = (e) => {\n          const message = JSON.parse(e.data);\n          setPrice(message[props.crypto]);\n        }\n        return () => {\n            ws.current.close();\n        };\n    }, [ ]);\n    return(\n        <div className=\"note\" style={{backgroundColor: \"light-grey\"}}>\n            <img src={props.image} alt=\"\" width=\"40\" height=\"40\"/>\n            <h1>{props.crypto.toUpperCase()}</h1>\n            <p>{\"$ \" + price}</p>\n        </div>);\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}