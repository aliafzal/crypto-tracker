{"ast":null,"code":"var _jsxFileName = \"/Users/aliafzal/React Apps/realtime-crypto/src/pages/CoinPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport coinGecko from \"../apis/coinGeko\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoinPage() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [coinData, setCoinData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const [day, week, year, detail] = await Promise.all([coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"1\"\n        }\n      }), coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"7\"\n        }\n      }), coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"365\"\n        }\n      }), coinGecko.get(\"/coins/markets/\", {\n        params: {\n          vs_currency: \"usd\",\n          ids: id\n        }\n      })]);\n      console.log(day);\n      setCoinData({\n        day: day.data.prices,\n        week: week.data.prices,\n        year: year.data.prices,\n        detail: detail.data[0]\n      });\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinPage, \"mD32yoI5RnIlIpIA3sdg4q3ChDY=\", false, function () {\n  return [useParams];\n});\n\n_c = CoinPage;\nexport default CoinPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinPage\");","map":{"version":3,"sources":["/Users/aliafzal/React Apps/realtime-crypto/src/pages/CoinPage.jsx"],"names":["React","useState","useEffect","useParams","coinGecko","CoinPage","id","coinData","setCoinData","isLoading","setIsLoading","fetchData","day","week","year","detail","Promise","all","get","params","vs_currency","days","ids","console","log","data","prices"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,YAAY;AAC5BD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAM,CAACE,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAkBC,MAAlB,IAA4B,MAAMC,OAAO,CAACC,GAAR,CAAY,CAClDb,SAAS,CAACc,GAAV,CAAe,UAASZ,EAAG,gBAA3B,EAA4C;AAC1Ca,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,KADP;AAENC,UAAAA,IAAI,EAAE;AAFA;AADkC,OAA5C,CADkD,EAOlDjB,SAAS,CAACc,GAAV,CAAe,UAASZ,EAAG,gBAA3B,EAA4C;AAC1Ca,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,KADP;AAENC,UAAAA,IAAI,EAAE;AAFA;AADkC,OAA5C,CAPkD,EAalDjB,SAAS,CAACc,GAAV,CAAe,UAASZ,EAAG,gBAA3B,EAA4C;AAC1Ca,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,KADP;AAENC,UAAAA,IAAI,EAAE;AAFA;AADkC,OAA5C,CAbkD,EAmBlDjB,SAAS,CAACc,GAAV,CAAc,iBAAd,EAAiC;AAC/BC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,KADP;AAENE,UAAAA,GAAG,EAAEhB;AAFC;AADuB,OAAjC,CAnBkD,CAAZ,CAAxC;AA0BAiB,MAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AAEAJ,MAAAA,WAAW,CAAC;AACVI,QAAAA,GAAG,EAAGA,GAAG,CAACa,IAAJ,CAASC,MADL;AAEVb,QAAAA,IAAI,EAAEA,IAAI,CAACY,IAAL,CAAUC,MAFN;AAGVZ,QAAAA,IAAI,EAAEA,IAAI,CAACW,IAAL,CAAUC,MAHN;AAIVX,QAAAA,MAAM,EAAEA,MAAM,CAACU,IAAP,CAAY,CAAZ;AAJE,OAAD,CAAX;AAMAf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KArCD;;AAuCAC,IAAAA,SAAS;AACV,GAzCM,EAyCJ,EAzCI,CAAT;AA2CF,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArDQN,Q;UACUF,S;;;KADVE,Q;AAuDT,eAAeA,QAAf","sourcesContent":["import React , {useState,useEffect}from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport coinGecko from \"../apis/coinGeko\";\n\n\nfunction CoinPage() {\n    const { id } = useParams();\n    const [coinData, setCoinData] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n          setIsLoading(true);\n          const [day, week, year, detail] = await Promise.all([\n            coinGecko.get(`/coins/${id}/market_chart/`, {\n              params: {\n                vs_currency: \"usd\",\n                days: \"1\",\n              },\n            }),\n            coinGecko.get(`/coins/${id}/market_chart/`, {\n              params: {\n                vs_currency: \"usd\",\n                days: \"7\",\n              },\n            }),\n            coinGecko.get(`/coins/${id}/market_chart/`, {\n              params: {\n                vs_currency: \"usd\",\n                days: \"365\",\n              },\n            }),\n            coinGecko.get(\"/coins/markets/\", {\n              params: {\n                vs_currency: \"usd\",\n                ids: id,\n              },\n            }),\n          ]);\n          console.log(day);\n    \n          setCoinData({\n            day:  day.data.prices,\n            week: week.data.prices,\n            year: year.data.prices,\n            detail: detail.data[0],\n          });\n          setIsLoading(false);\n        };\n    \n        fetchData();\n      }, []);\n    \n  return (\n    <div>\n      <h1>Crypto Tracker</h1>\n    </div>\n  );\n}\n\nexport default CoinPage;\n"]},"metadata":{},"sourceType":"module"}