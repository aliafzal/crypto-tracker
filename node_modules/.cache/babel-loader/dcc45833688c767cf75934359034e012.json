{"ast":null,"code":"var _jsxFileName = \"/Users/aliafzal/React Apps/realtime-crypto/src/pages/CoinLandingPage.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://api.coincap.io/v2\";\nconst webUrl = \"wss://ws.coincap.io/prices?assets=\";\n\nfunction CoinLandingPage() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [coins, setCoins] = useState([]);\n  useEffect(_s(() => {\n    _s();\n\n    useEffect(() => {\n      const fetchData = async () => {\n        setIsLoading(true);\n        const response = await coinGecko.get(\"/coins/markets/\", {\n          params: {\n            vs_currency: \"usd\",\n            ids: watchList.join(\",\")\n          }\n        });\n        setCoins(response.data);\n        setIsLoading(false);\n      };\n\n      if (watchList.length > 0) {\n        fetchData();\n      } else setCoins([]);\n    }, [watchList]);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      webUrl: webUrl,\n      crypto: \"ethereum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      webUrl: webUrl,\n      crypto: \"bitcoin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      webUrl: webUrl,\n      crypto: \"litecoin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(CoinLandingPage, \"GxQ2dm5dweKESZWOpvpU/A1F8i4=\");\n\n_c = CoinLandingPage;\nexport default CoinLandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinLandingPage\");","map":{"version":3,"sources":["/Users/aliafzal/React Apps/realtime-crypto/src/pages/CoinLandingPage.jsx"],"names":["React","useEffect","useState","Card","url","webUrl","CoinLandingPage","coins","setCoins","fetchData","setIsLoading","response","coinGecko","get","params","vs_currency","ids","watchList","join","data","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,MAAMC,GAAG,GAAG,2BAAZ;AACA,MAAMC,MAAM,GAAG,oCAAf;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AAEAD,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZA,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMQ,SAAS,GAAG,YAAY;AAC5BC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMC,QAAQ,GAAG,MAAMC,SAAS,CAACC,GAAV,CAAc,iBAAd,EAAiC;AACtDC,UAAAA,MAAM,EAAE;AACNC,YAAAA,WAAW,EAAE,KADP;AAENC,YAAAA,GAAG,EAAEC,SAAS,CAACC,IAAV,CAAe,GAAf;AAFC;AAD8C,SAAjC,CAAvB;AAMAV,QAAAA,QAAQ,CAACG,QAAQ,CAACQ,IAAV,CAAR;AACAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAVD;;AAYA,UAAIO,SAAS,CAACG,MAAV,GAAmB,CAAvB,EAA0B;AACxBX,QAAAA,SAAS;AACV,OAFD,MAEOD,QAAQ,CAAC,EAAD,CAAR;AACR,KAhBM,EAgBJ,CAACS,SAAD,CAhBI,CAAT;AAiBH,GAlBQ,mCAkBP,EAlBO,CAAT;AAmBA,sBAAO;AAAA,4BACC,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEZ,MAAd;AAAsB,MAAA,MAAM,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEA,MAAd;AAAsB,MAAA,MAAM,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEA,MAAd;AAAsB,MAAA,MAAM,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;IA3BQC,e;;KAAAA,e;AA6BT,eAAeA,eAAf","sourcesContent":["import React , {useEffect, useState} from \"react\";\nimport Card from \"../components/Card\"\nconst url = \"https://api.coincap.io/v2\";\nconst webUrl = \"wss://ws.coincap.io/prices?assets=\"\n\nfunction CoinLandingPage() {\n    const [coins,setCoins] = useState([]);\n\n    useEffect(() => {\n        useEffect(() => {\n            const fetchData = async () => {\n              setIsLoading(true);\n              const response = await coinGecko.get(\"/coins/markets/\", {\n                params: {\n                  vs_currency: \"usd\",\n                  ids: watchList.join(\",\"),\n                },\n              });\n              setCoins(response.data);\n              setIsLoading(false);\n            };\n        \n            if (watchList.length > 0) {\n              fetchData();\n            } else setCoins([]);\n          }, [watchList]);\n    },[])\n    return(<div>\n            <Card webUrl={webUrl} crypto={\"ethereum\"}/>\n            <Card webUrl={webUrl} crypto={\"bitcoin\"}/>\n            <Card webUrl={webUrl} crypto={\"litecoin\"}/>\n    </div>);\n}\n\nexport default CoinLandingPage;"]},"metadata":{},"sourceType":"module"}