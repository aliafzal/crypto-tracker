{"ast":null,"code":"var _jsxFileName = \"/Users/aliafzal/React Apps/realtime-crypto/src/context/coinListContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, createContext, useState } from \"react\";\nimport coinGecko from \"../apis/coinGeko\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoinListContext = /*#__PURE__*/createContext();\nexport const CoinListContextProvide = props => {\n  _s();\n\n  const [coinList, setCoinList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await coinGecko.get(\"/coins/markets/\", {\n        params: {\n          vs_currency: \"usd\",\n          order: \"market_cap_desc\",\n          per_page: 30,\n          page: 1,\n          price_change_percentage: \"24h\"\n        }\n      });\n      setCoinList(response.data);\n    };\n\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(CoinListContext.Provider, {\n    value: {\n      coinList\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CoinListContextProvide, \"ZBgk+OT9Xay7tUwC9lfypgd5AyY=\");\n\n_c = CoinListContextProvide;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinListContextProvide\");","map":{"version":3,"sources":["/Users/aliafzal/React Apps/realtime-crypto/src/context/coinListContext.js"],"names":["React","useEffect","createContext","useState","coinGecko","CoinListContext","CoinListContextProvide","props","coinList","setCoinList","fetchData","response","get","params","vs_currency","order","per_page","page","price_change_percentage","data","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,aAAzB,EAAwCC,QAAxC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AACA,OAAO,MAAMC,eAAe,gBAAGH,aAAa,EAArC;AAEP,OAAO,MAAMI,sBAAsB,GAAGC,KAAK,IAAI;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAV,CAAc,iBAAd,EAAiC;AACtDC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,KADP;AAENC,UAAAA,KAAK,EAAE,iBAFD;AAGNC,UAAAA,QAAQ,EAAE,EAHJ;AAINC,UAAAA,IAAI,EAAE,CAJA;AAKNC,UAAAA,uBAAuB,EAAE;AALnB;AAD8C,OAAjC,CAAvB;AASAT,MAAAA,WAAW,CAACE,QAAQ,CAACQ,IAAV,CAAX;AACD,KAXH;;AAYET,IAAAA,SAAS;AAEd,GAfQ,CAAT;AAiBA,sBAAO,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACF,MAAAA;AAAD,KAAjC;AAAA,cACND,KAAK,CAACa;AADA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAvBM;;GAAMd,sB;;KAAAA,sB","sourcesContent":["import React, {useEffect,createContext, useState} from \"react\";\nimport coinGecko from \"../apis/coinGeko\"\nexport const CoinListContext = createContext();\n\nexport const CoinListContextProvide = props => {\n    const [coinList, setCoinList] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await coinGecko.get(\"/coins/markets/\", {\n              params: {\n                vs_currency: \"usd\",\n                order: \"market_cap_desc\",\n                per_page: 30,\n                page: 1,\n                price_change_percentage: \"24h\",\n              },\n            });\n            setCoinList(response.data)\n          };\n          fetchData();\n\n    })\n\n    return(<CoinListContext.Provider value={{coinList}}>\n    {props.children}\n    </CoinListContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}